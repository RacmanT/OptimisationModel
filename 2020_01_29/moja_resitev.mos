model ModelName
  options noimplicit
  uses "mmxprs"
  ! uses "mminsight" ! uncomment this line for an Xpress Insight model

  declarations
    PACCHETTI = 1..3
    ATTIVITA = 1..10
    

    DURATA_MASSIMA        : array(PACCHETTI) of integer
    VALUTAZIONE_MINIMA    : array(PACCHETTI) of integer

    DURATA_ATTIVITA       : array(ATTIVITA) of real
    COSTO_ATTIVITA        : array(ATTIVITA) of integer
    VALUTAZIONE_ATTIVITA  : array(ATTIVITA) of integer
    
    x:array(ATTIVITA, PACCHETTI) of mpvar
    z:array(PACCHETTI, PACCHETTI) of mpvar
    costo_pacchetto:array(PACCHETTI) of mpvar
    
  end-declarations

  writeln("Begin running model")
    forall(a in ATTIVITA, p in PACCHETTI) x(a, p) is_binary
    forall(p1, p2 in PACCHETTI) z(p1, p2) is_binary
    forall(p in PACCHETTI) costo_pacchetto(p) is_integer


    DURATA_MASSIMA     :: [10, 12, 16]
    VALUTAZIONE_MINIMA :: [7, 6, 5]

    DURATA_ATTIVITA      :: [6, 2, 5, 4, 1.5, 2.5, 3, 6, 2, 3]
    COSTO_ATTIVITA       :: [120, 40, 150, 20, 30, 50, 90, 60, 70, 20]
    VALUTAZIONE_ATTIVITA :: [4, 1, 3, 3, 1, 3, 1, 3, 2, 2]
    
    forall(a in ATTIVITA) sum(p in PACCHETTI) x(a, p) <= 1
    
    forall(p in PACCHETTI) sum(a in ATTIVITA) x(a,p) * DURATA_ATTIVITA(a) <= DURATA_MASSIMA(p)
    forall(p in PACCHETTI) sum(a in ATTIVITA) x(a,p) * VALUTAZIONE_ATTIVITA(a) >= VALUTAZIONE_MINIMA(p)
    forall(p in PACCHETTI) costo_pacchetto(p) = sum(a in ATTIVITA) x(a,p) * COSTO_ATTIVITA(a)
    
   
    
    minimise(sum(p in PACCHETTI)costo_pacchetto(p))
    writeln("Costo minimo ", getobjval)
     forall(p in PACCHETTI) do
      writeln("Costo", p , ". pacchetto ", getsol(costo_pacchetto(p)))
    end-do
    
    forall(p1,p2 in PACCHETTI | p1<>p2) do
      costo_pacchetto(p1) - costo_pacchetto(p2) >= 90 - MAX_INT* (1-z(p1,p2))
      costo_pacchetto(p1) - costo_pacchetto(p2) <= - 90 + MAX_INT* z(p1,p2)
    end-do
    
    writeln("------------------------------------")

    
    minimise(sum(p in PACCHETTI)costo_pacchetto(p))
    writeln("Costo minimo ", getobjval)
     forall(p in PACCHETTI) do
      writeln("Costo", p , ". pacchetto ", getsol(costo_pacchetto(p)))
    end-do
    
  writeln("End running model")
end-model
